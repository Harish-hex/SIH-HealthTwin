services:
  # Backend API
  - type: web
    name: health-monitoring-api
    env: python
    plan: starter
    rootDir: Digital Health Twin/backend
    buildCommand: pip install -r requirements.txt
    startCommand: gunicorn --bind 0.0.0.0:$PORT app:app
    envVars:
      - key: FLASK_ENV
        value: production
      - key: DATABASE_URL
        fromDatabase:
          name: health-monitoring-db
          property: connectionString
      - key: SECRET_KEY
        generateValue: true
      - key: CORS_ORIGINS
        value: https://asha-worker-dashboard.onrender.com,https://health-worker-dashboard.onrender.com,https://health-monitoring-login.onrender.com
      - key: HOST
        value: 0.0.0.0
      - key: PORT
        value: 10000

  # ASHA Dashboard
  - type: web
    name: asha-worker-dashboard
    env: static
    rootDir: AshaWorker_dashboard
    buildCommand: npm install && npm run build
    staticPublishPath: dist
    envVars:
      - key: VITE_API_URL
        value: https://health-monitoring-api.onrender.com
      - key: VITE_LOGIN_URL
        value: https://health-monitoring-login.onrender.com

  # Health Dashboard
  - type: web
    name: health-worker-dashboard
    env: static
    rootDir: HealthWorker_dashboard
    buildCommand: npm install && npm run build
    staticPublishPath: dist
    envVars:
      - key: VITE_API_URL
        value: https://health-monitoring-api.onrender.com
      - key: VITE_LOGIN_URL
        value: https://health-monitoring-login.onrender.com

  # Login Page
  - type: web
    name: health-monitoring-login
    env: static
    rootDir: Login pg
    staticPublishPath: ./
    envVars:
      - key: VITE_API_URL
        value: https://health-monitoring-api.onrender.com

databases:
  - name: health-monitoring-db
    plan: starter
    databaseName: health_monitoring
    user: health_user